{"ast":null,"code":"var _jsxFileName = \"/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { Canvas } from '@react-three/fiber';\n\n// The 3D Card mesh component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardMesh({\n  suit,\n  value,\n  flipped,\n  position,\n  scale,\n  uniqueKey\n}) {\n  _s();\n  // Load textures unconditionally to follow React Hook rules\n  const frontTexturePath = `/assets/cards/faces/${suit}/${value}.png?nocache=${uniqueKey}`;\n  const backTexturePath = `/assets/cards/backs/cardback.png?nocache=${uniqueKey}`;\n\n  // Force texture reload by adding a cache-busting parameter\n  const frontTexture = useLoader(THREE.TextureLoader, frontTexturePath);\n  const backTexture = useLoader(THREE.TextureLoader, backTexturePath);\n  useEffect(() => {\n    return () => {\n      // Cleanup textures when component unmounts\n      if (frontTexture) frontTexture.dispose();\n      if (backTexture) backTexture.dispose();\n    };\n  }, [frontTexture, backTexture]);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    scale: scale,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [1, 1.4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      map: flipped ? backTexture : frontTexture,\n      side: THREE.DoubleSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n// The Card component that wraps the 3D mesh in a Canvas\n_s(CardMesh, \"mG+vouXsQN3+7Kwp1D2KP5eTdaI=\", false, function () {\n  return [useLoader, useLoader];\n});\n_c = CardMesh;\nexport default function Card({\n  suit,\n  value,\n  flipped,\n  position,\n  scale,\n  gameId\n}) {\n  // Use a truly unique key that changes with each game\n  const uniqueKey = `${gameId || Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      shadows: true,\n      camera: {\n        position: [0, 0, 2]\n      },\n      gl: {\n        preserveDrawingBuffer: true\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardMesh, {\n        suit: suit,\n        value: value,\n        flipped: flipped,\n        position: position,\n        scale: scale,\n        uniqueKey: uniqueKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, uniqueKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Card;\nvar _c, _c2;\n$RefreshReg$(_c, \"CardMesh\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"names":["React","useEffect","useLoader","THREE","Canvas","jsxDEV","_jsxDEV","CardMesh","suit","value","flipped","position","scale","uniqueKey","_s","frontTexturePath","backTexturePath","frontTexture","TextureLoader","backTexture","dispose","children","args","fileName","_jsxFileName","lineNumber","columnNumber","map","side","DoubleSide","_c","Card","gameId","Date","now","Math","random","toString","substring","style","width","height","shadows","camera","gl","preserveDrawingBuffer","intensity","_c2","$RefreshReg$"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/Card.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { Canvas } from '@react-three/fiber';\n\n// The 3D Card mesh component\nfunction CardMesh({ suit, value, flipped, position, scale, uniqueKey }) {\n  // Load textures unconditionally to follow React Hook rules\n  const frontTexturePath = `/assets/cards/faces/${suit}/${value}.png?nocache=${uniqueKey}`;\n  const backTexturePath = `/assets/cards/backs/cardback.png?nocache=${uniqueKey}`;\n  \n  // Force texture reload by adding a cache-busting parameter\n  const frontTexture = useLoader(THREE.TextureLoader, frontTexturePath);\n  const backTexture = useLoader(THREE.TextureLoader, backTexturePath);\n  \n  useEffect(() => {\n    return () => {\n      // Cleanup textures when component unmounts\n      if (frontTexture) frontTexture.dispose();\n      if (backTexture) backTexture.dispose();\n    };\n  }, [frontTexture, backTexture]);\n  \n  return (\n    <mesh position={position} scale={scale}>\n      <planeGeometry args={[1, 1.4]} />\n      <meshStandardMaterial \n        map={flipped ? backTexture : frontTexture}\n        side={THREE.DoubleSide}\n      />\n    </mesh>\n  );\n}\n\n// The Card component that wraps the 3D mesh in a Canvas\nexport default function Card({ suit, value, flipped, position, scale, gameId }) {\n  // Use a truly unique key that changes with each game\n  const uniqueKey = `${gameId || Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n  \n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <Canvas \n        key={uniqueKey} \n        shadows \n        camera={{ position: [0, 0, 2] }}\n        gl={{ preserveDrawingBuffer: true }}\n      >\n        <ambientLight intensity={0.8} />\n        <pointLight position={[10, 10, 10]} />\n        <CardMesh \n          suit={suit}\n          value={value}\n          flipped={flipped}\n          position={position}\n          scale={scale}\n          uniqueKey={uniqueKey}\n        />\n      </Canvas>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}