{"ast":null,"code":"var _jsxFileName = \"/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/PlayerHand.js\";\nimport React, { Suspense } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlayerHand({\n  player,\n  isCurrentTurn,\n  isHumanPlayer,\n  gamePhase,\n  showTotal,\n  isWinner\n}) {\n  const {\n    name,\n    cards,\n    visibleCards,\n    hiddenCards,\n    total,\n    status\n  } = player;\n\n  // Helper function to get status text\n  const getStatusText = () => {\n    switch (status) {\n      case 'active':\n        return isCurrentTurn ? 'Playing...' : 'Waiting';\n      case 'holding':\n        return `Holding${showTotal ? ` at ${total}` : ''}`;\n      case 'eliminated':\n        return 'Busted!';\n      case 'winner':\n        return 'Winner!';\n      default:\n        return '';\n    }\n  };\n  const CardFallback = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '60px',\n      height: '84px',\n      backgroundColor: '#1b4332',\n      border: '1px solid #43aa8b',\n      borderRadius: '4px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n\n  // Determine whether to show hidden cards (show them when game is over or player is eliminated/winner)\n  const showAllCards = gamePhase === 'gameOver' || status === 'eliminated' || status === 'winner';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `player-hand ${isCurrentTurn ? 'active-turn' : ''} ${status} ${isWinner ? 'winning-player' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [name, \" \", isWinner && gamePhase === 'gameOver' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"winner-badge\",\n          children: \"\\uD83D\\uDC51\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 69\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Total: \", showTotal ? total : '?']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getStatusText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: [\"// In the JSX where Card components are rendered, pass the gameId:\", !showAllCards && hiddenCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(CardFallback, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 45\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            suit: card.suit,\n            value: card.value,\n            flipped: true,\n            position: [0, 0, 0],\n            scale: [1.2, 1.2, 1.2],\n            gameId: gameId // Pass gameId here\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, `hidden-${player.id}-${index}-${gameId}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)), showAllCards && hiddenCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(CardFallback, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 45\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            suit: card.suit,\n            value: card.value,\n            flipped: false,\n            position: [0, 0, 0],\n            scale: [1.2, 1.2, 1.2],\n            gameId: gameId // Pass gameId here\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)\n      }, `revealed-${player.id}-${index}-${gameId}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)), visibleCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(CardFallback, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 45\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            suit: card.suit,\n            value: card.value,\n            flipped: false,\n            position: [0, 0, 0],\n            scale: [1.2, 1.2, 1.2],\n            gameId: gameId // Pass gameId here\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)\n      }, `visible-${player.id}-${index}-${gameId}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_c = PlayerHand;\nvar _c;\n$RefreshReg$(_c, \"PlayerHand\");","map":{"version":3,"names":["React","Suspense","Card","jsxDEV","_jsxDEV","PlayerHand","player","isCurrentTurn","isHumanPlayer","gamePhase","showTotal","isWinner","name","cards","visibleCards","hiddenCards","total","status","getStatusText","CardFallback","style","width","height","backgroundColor","border","borderRadius","display","justifyContent","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","showAllCards","className","map","card","index","fallback","suit","value","flipped","position","scale","gameId","id","_c","$RefreshReg$"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/PlayerHand.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport Card from './Card';\n\nexport default function PlayerHand({\n    player,\n    isCurrentTurn,\n    isHumanPlayer,\n    gamePhase,\n    showTotal,\n    isWinner\n}) {\n    const { name, cards, visibleCards, hiddenCards, total, status } = player;\n\n    // Helper function to get status text\n    const getStatusText = () => {\n        switch (status) {\n            case 'active': return isCurrentTurn ? 'Playing...' : 'Waiting';\n            case 'holding': return `Holding${showTotal ? ` at ${total}` : ''}`;\n            case 'eliminated': return 'Busted!';\n            case 'winner': return 'Winner!';\n            default: return '';\n        }\n    };\n\n    const CardFallback = () => (\n        <div style={{\n            width: '60px',\n            height: '84px',\n            backgroundColor: '#1b4332',\n            border: '1px solid #43aa8b',\n            borderRadius: '4px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        }}>\n            <span>Loading</span>\n        </div>\n    );\n\n    // Determine whether to show hidden cards (show them when game is over or player is eliminated/winner)\n    const showAllCards = gamePhase === 'gameOver' || status === 'eliminated' || status === 'winner';\n\n    return (\n        <div className={`player-hand ${isCurrentTurn ? 'active-turn' : ''} ${status} ${isWinner ? 'winning-player' : ''}`}>\n            <div className=\"player-info\">\n                <h3>{name} {isWinner && gamePhase === 'gameOver' && <span className=\"winner-badge\">ðŸ‘‘</span>}</h3>\n                <div className=\"player-status\">\n                    <span>Total: {showTotal ? total : '?'}</span>\n                    <span>{getStatusText()}</span>\n                </div>\n            </div>\n\n            <div className=\"cards-container\">\n      // In the JSX where Card components are rendered, pass the gameId:\n\n                {!showAllCards && hiddenCards.map((card, index) => (\n                    <div key={`hidden-${player.id}-${index}-${gameId}`} className=\"card-wrapper\">\n                        <Suspense fallback={<CardFallback />}>\n                            <Card\n                                suit={card.suit}\n                                value={card.value}\n                                flipped={true}\n                                position={[0, 0, 0]}\n                                scale={[1.2, 1.2, 1.2]}\n                                gameId={gameId} // Pass gameId here\n                            />\n                        </Suspense>\n                    </div>\n                ))}\n\n                {showAllCards && hiddenCards.map((card, index) => (\n                    <div key={`revealed-${player.id}-${index}-${gameId}`} className=\"card-wrapper\">\n                        <Suspense fallback={<CardFallback />}>\n                            <Card\n                                suit={card.suit}\n                                value={card.value}\n                                flipped={false}\n                                position={[0, 0, 0]}\n                                scale={[1.2, 1.2, 1.2]}\n                                gameId={gameId} // Pass gameId here\n                            />\n                        </Suspense>\n                    </div>\n                ))}\n\n                {visibleCards.map((card, index) => (\n                    <div key={`visible-${player.id}-${index}-${gameId}`} className=\"card-wrapper\">\n                        <Suspense fallback={<CardFallback />}>\n                            <Card\n                                suit={card.suit}\n                                value={card.value}\n                                flipped={false}\n                                position={[0, 0, 0]}\n                                scale={[1.2, 1.2, 1.2]}\n                                gameId={gameId} // Pass gameId here\n                            />\n                        </Suspense>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}