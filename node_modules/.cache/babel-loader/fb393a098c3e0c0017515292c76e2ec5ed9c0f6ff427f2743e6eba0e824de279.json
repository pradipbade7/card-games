{"ast":null,"code":"var _jsxFileName = \"/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { Canvas } from '@react-three/fiber';\n\n// The 3D Card mesh component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardMesh({\n  suit,\n  value,\n  flipped,\n  position,\n  scale\n}) {\n  _s();\n  // Load textures unconditionally to follow React Hook rules\n  const frontTexturePath = `/assets/cards/faces/${suit}/${value}.png`;\n  const backTexturePath = '/assets/cards/backs/cardback.png';\n\n  // Load textures\n  const frontTexture = useLoader(THREE.TextureLoader, frontTexturePath);\n  const backTexture = useLoader(THREE.TextureLoader, backTexturePath);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    scale: scale,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [1, 1.4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      map: flipped ? backTexture : frontTexture,\n      side: THREE.DoubleSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n// The Card component that wraps the 3D mesh in a Canvas\n_s(CardMesh, \"L0x6y30knouPngZuN0SB9PXKEkA=\", false, function () {\n  return [useLoader, useLoader];\n});\n_c = CardMesh;\nexport default function Card({\n  suit,\n  value,\n  flipped,\n  position,\n  scale\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      shadows: true,\n      camera: {\n        position: [0, 0, 2]\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardMesh, {\n        suit: suit,\n        value: value,\n        flipped: flipped,\n        position: position,\n        scale: scale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Card;\nvar _c, _c2;\n$RefreshReg$(_c, \"CardMesh\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"names":["React","useLoader","THREE","Canvas","jsxDEV","_jsxDEV","CardMesh","suit","value","flipped","position","scale","_s","frontTexturePath","backTexturePath","frontTexture","TextureLoader","backTexture","children","args","fileName","_jsxFileName","lineNumber","columnNumber","map","side","DoubleSide","_c","Card","style","width","height","shadows","camera","intensity","_c2","$RefreshReg$"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/Card.js"],"sourcesContent":["import React from 'react';\nimport { useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { Canvas } from '@react-three/fiber';\n\n// The 3D Card mesh component\nfunction CardMesh({ suit, value, flipped, position, scale }) {\n  // Load textures unconditionally to follow React Hook rules\n  const frontTexturePath = `/assets/cards/faces/${suit}/${value}.png`;\n  const backTexturePath = '/assets/cards/backs/cardback.png';\n  \n  // Load textures\n  const frontTexture = useLoader(THREE.TextureLoader, frontTexturePath);\n  const backTexture = useLoader(THREE.TextureLoader, backTexturePath);\n  \n  return (\n    <mesh position={position} scale={scale}>\n      <planeGeometry args={[1, 1.4]} />\n      <meshStandardMaterial \n        map={flipped ? backTexture : frontTexture}\n        side={THREE.DoubleSide}\n      />\n    </mesh>\n  );\n}\n\n// The Card component that wraps the 3D mesh in a Canvas\nexport default function Card({ suit, value, flipped, position, scale }) {\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <Canvas shadows camera={{ position: [0, 0, 2] }}>\n        <ambientLight intensity={0.8} />\n        <pointLight position={[10, 10, 10]} />\n        <CardMesh \n          suit={suit}\n          value={value}\n          flipped={flipped}\n          position={position}\n          scale={scale}\n        />\n      </Canvas>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,oBAAoB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC3D;EACA,MAAMC,gBAAgB,GAAG,uBAAuBN,IAAI,IAAIC,KAAK,MAAM;EACnE,MAAMM,eAAe,GAAG,kCAAkC;;EAE1D;EACA,MAAMC,YAAY,GAAGd,SAAS,CAACC,KAAK,CAACc,aAAa,EAAEH,gBAAgB,CAAC;EACrE,MAAMI,WAAW,GAAGhB,SAAS,CAACC,KAAK,CAACc,aAAa,EAAEF,eAAe,CAAC;EAEnE,oBACET,OAAA;IAAMK,QAAQ,EAAEA,QAAS;IAACC,KAAK,EAAEA,KAAM;IAAAO,QAAA,gBACrCb,OAAA;MAAec,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjClB,OAAA;MACEmB,GAAG,EAAEf,OAAO,GAAGQ,WAAW,GAAGF,YAAa;MAC1CU,IAAI,EAAEvB,KAAK,CAACwB;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;;AAEA;AAAAX,EAAA,CApBSN,QAAQ;EAAA,QAMML,SAAS,EACVA,SAAS;AAAA;AAAA0B,EAAA,GAPtBrB,QAAQ;AAqBjB,eAAe,SAASsB,IAAIA,CAAC;EAAErB,IAAI;EAAEC,KAAK;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAM,CAAC,EAAE;EACtE,oBACEN,OAAA;IAAKwB,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAb,QAAA,eAC5Cb,OAAA,CAACF,MAAM;MAAC6B,OAAO;MAACC,MAAM,EAAE;QAAEvB,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;MAAE,CAAE;MAAAQ,QAAA,gBAC9Cb,OAAA;QAAc6B,SAAS,EAAE;MAAI;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChClB,OAAA;QAAYK,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtClB,OAAA,CAACC,QAAQ;QACPC,IAAI,EAAEA,IAAK;QACXC,KAAK,EAAEA,KAAM;QACbC,OAAO,EAAEA,OAAQ;QACjBC,QAAQ,EAAEA,QAAS;QACnBC,KAAK,EAAEA;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACY,GAAA,GAhBuBP,IAAI;AAAA,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}