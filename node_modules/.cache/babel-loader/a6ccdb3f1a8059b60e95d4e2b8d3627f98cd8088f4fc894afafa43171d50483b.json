{"ast":null,"code":"var _jsxFileName = \"/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/PlayerHand.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlayerHand({\n  player,\n  isCurrentTurn,\n  isHumanPlayer,\n  gamePhase,\n  showTotal,\n  isWinner\n}) {\n  const {\n    name,\n    cards,\n    visibleCards,\n    hiddenCards,\n    total,\n    status\n  } = player;\n\n  // Helper function to get status text\n  const getStatusText = () => {\n    switch (status) {\n      case 'active':\n        return isCurrentTurn ? 'Playing...' : 'Waiting';\n      case 'holding':\n        return `Holding${showTotal ? ` at ${total}` : ''}`;\n      case 'eliminated':\n        return 'Busted!';\n      case 'winner':\n        return 'Winner!';\n      default:\n        return '';\n    }\n  };\n\n  // Placeholder for cards\n  const CardPlaceholder = ({\n    suit,\n    value,\n    flipped\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card-placeholder ${flipped ? 'card-back' : 'card-front'}`,\n    children: !flipped && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-value\",\n      children: [value.charAt(0).toUpperCase(), value.length > 1 ? value.charAt(1) : '', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `suit ${suit}`,\n        children: \"\\u2665\\u2666\\u2660\\u2663\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n\n  // Determine whether to show hidden cards (show them when game is over or player is eliminated/winner)\n  const showAllCards = gamePhase === 'gameOver' || gamePhase === 'revealing' || status === 'eliminated' || status === 'winner';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `player-hand ${isCurrentTurn ? 'active-turn' : ''} ${status} ${isWinner ? 'winning-player' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [name, \" \", isWinner && gamePhase === 'gameOver' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"winner-badge\",\n          children: \"\\uD83D\\uDC51\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 69\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Total: \", showTotal ? total : '?']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getStatusText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-placeholder-container\",\n      children: [!showAllCards && hiddenCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CardPlaceholder, {\n          suit: card.suit,\n          value: card.value,\n          flipped: true // Always show back while hidden\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, `hidden-${player.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)), showAllCards && hiddenCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CardPlaceholder, {\n          suit: card.suit,\n          value: card.value,\n          flipped: false // Show face when game is over\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, `revealed-${player.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)), visibleCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(CardPlaceholder, {\n          suit: card.suit,\n          value: card.value,\n          flipped: false // Show face\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, `visible-${player.id}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_c = PlayerHand;\nvar _c;\n$RefreshReg$(_c, \"PlayerHand\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PlayerHand","player","isCurrentTurn","isHumanPlayer","gamePhase","showTotal","isWinner","name","cards","visibleCards","hiddenCards","total","status","getStatusText","CardPlaceholder","suit","value","flipped","className","children","charAt","toUpperCase","length","fileName","_jsxFileName","lineNumber","columnNumber","showAllCards","map","card","index","id","_c","$RefreshReg$"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/PlayerHand.js"],"sourcesContent":["import React from 'react';\n\nexport default function PlayerHand({\n    player,\n    isCurrentTurn,\n    isHumanPlayer,\n    gamePhase,\n    showTotal,\n    isWinner\n}) {\n    const { name, cards, visibleCards, hiddenCards, total, status } = player;\n\n    // Helper function to get status text\n    const getStatusText = () => {\n        switch (status) {\n            case 'active': return isCurrentTurn ? 'Playing...' : 'Waiting';\n            case 'holding': return `Holding${showTotal ? ` at ${total}` : ''}`;\n            case 'eliminated': return 'Busted!';\n            case 'winner': return 'Winner!';\n            default: return '';\n        }\n    };\n\n    // Placeholder for cards\n    const CardPlaceholder = ({ suit, value, flipped }) => (\n        <div className={`card-placeholder ${flipped ? 'card-back' : 'card-front'}`}>\n            {!flipped && (\n                <div className=\"card-value\">\n                    {value.charAt(0).toUpperCase()}{value.length > 1 ? value.charAt(1) : ''}\n                    <span className={`suit ${suit}`}>â™¥â™¦â™ â™£</span>\n                </div>\n            )}\n        </div>\n    );\n\n    // Determine whether to show hidden cards (show them when game is over or player is eliminated/winner)\n    const showAllCards = gamePhase === 'gameOver' || gamePhase === 'revealing' || status === 'eliminated' || status === 'winner';\n    \n    return (\n        <div className={`player-hand ${isCurrentTurn ? 'active-turn' : ''} ${status} ${isWinner ? 'winning-player' : ''}`}>\n            <div className=\"player-info\">\n                <h3>{name} {isWinner && gamePhase === 'gameOver' && <span className=\"winner-badge\">ðŸ‘‘</span>}</h3>\n                <div className=\"player-status\">\n                    <span>Total: {showTotal ? total : '?'}</span>\n                    <span>{getStatusText()}</span>\n                </div>\n            </div>\n            \n            <div className=\"cards-placeholder-container\">\n                {/* Hidden cards (for bots) - show as hidden unless game is over or player is eliminated/winner */}\n                {!showAllCards && hiddenCards.map((card, index) => (\n                    <div key={`hidden-${player.id}-${index}`} className=\"card-wrapper\">\n                        <CardPlaceholder\n                            suit={card.suit}\n                            value={card.value}\n                            flipped={true} // Always show back while hidden\n                        />\n                    </div>\n                ))}\n                \n                {/* Show hidden cards as visible when game is over or player is eliminated/winner */}\n                {showAllCards && hiddenCards.map((card, index) => (\n                    <div key={`revealed-${player.id}-${index}`} className=\"card-wrapper\">\n                        <CardPlaceholder\n                            suit={card.suit}\n                            value={card.value}\n                            flipped={false} // Show face when game is over\n                        />\n                    </div>\n                ))}\n                \n                {/* Visible cards */}\n                {visibleCards.map((card, index) => (\n                    <div key={`visible-${player.id}-${index}`} className=\"card-wrapper\">\n                        <CardPlaceholder\n                            suit={card.suit}\n                            value={card.value}\n                            flipped={false} // Show face\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}