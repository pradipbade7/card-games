{"ast":null,"code":"var _jsxFileName = \"/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/cards/CardScene.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\n\n// Card mesh component for Three.js rendering\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CardMesh({\n  suit,\n  value,\n  flipped,\n  position,\n  rotation,\n  scale\n}) {\n  _s();\n  // Load textures\n  const frontTexture = useLoader(THREE.TextureLoader, `/assets/cards/faces/${suit}/${value}.png`);\n  const backTexture = useLoader(THREE.TextureLoader, '/assets/cards/backs/cardback_red.png');\n\n  // Apply texture filters for better rendering\n  useEffect(() => {\n    [frontTexture, backTexture].forEach(texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      texture.needsUpdate = true;\n    });\n  }, [frontTexture, backTexture]);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    rotation: rotation,\n    scale: scale,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [1, 1.4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      map: flipped ? backTexture : frontTexture,\n      side: THREE.DoubleSide,\n      transparent: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(CardMesh, \"mG+vouXsQN3+7Kwp1D2KP5eTdaI=\", false, function () {\n  return [useLoader, useLoader];\n});\n_c = CardMesh;\nexport default function CardScene({\n  cards\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(CardMesh, {\n      suit: card.suit,\n      value: card.value,\n      flipped: card.flipped,\n      position: card.position,\n      rotation: card.rotation,\n      scale: card.scale\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n_c2 = CardScene;\nvar _c, _c2;\n$RefreshReg$(_c, \"CardMesh\");\n$RefreshReg$(_c2, \"CardScene\");","map":{"version":3,"names":["React","useEffect","useLoader","THREE","jsxDEV","_jsxDEV","Fragment","_Fragment","CardMesh","suit","value","flipped","position","rotation","scale","_s","frontTexture","TextureLoader","backTexture","forEach","texture","minFilter","LinearFilter","magFilter","needsUpdate","children","args","fileName","_jsxFileName","lineNumber","columnNumber","map","side","DoubleSide","transparent","_c","CardScene","cards","card","id","_c2","$RefreshReg$"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/cards/CardScene.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\n\n// Card mesh component for Three.js rendering\nfunction CardMesh({ suit, value, flipped, position, rotation, scale }) {\n    // Load textures\n    const frontTexture = useLoader(THREE.TextureLoader, `/assets/cards/faces/${suit}/${value}.png`);\n    const backTexture = useLoader(THREE.TextureLoader, '/assets/cards/backs/cardback_red.png');\n    \n    // Apply texture filters for better rendering\n    useEffect(() => {\n        [frontTexture, backTexture].forEach(texture => {\n            texture.minFilter = THREE.LinearFilter;\n            texture.magFilter = THREE.LinearFilter;\n            texture.needsUpdate = true;\n        });\n    }, [frontTexture, backTexture]);\n    \n    return (\n        <mesh position={position} rotation={rotation} scale={scale}>\n            <planeGeometry args={[1, 1.4]} />\n            <meshBasicMaterial \n                map={flipped ? backTexture : frontTexture}\n                side={THREE.DoubleSide}\n                transparent={true}\n            />\n        </mesh>\n    );\n}\n\nexport default function CardScene({ cards }) {\n    return (\n        <>\n            {cards.map((card) => (\n                <CardMesh\n                    key={card.id}\n                    suit={card.suit}\n                    value={card.value}\n                    flipped={card.flipped}\n                    position={card.position}\n                    rotation={card.rotation}\n                    scale={card.scale}\n                />\n            ))}\n        </>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,OAAO,KAAKC,KAAK,MAAM,OAAO;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACnE;EACA,MAAMC,YAAY,GAAGd,SAAS,CAACC,KAAK,CAACc,aAAa,EAAE,uBAAuBR,IAAI,IAAIC,KAAK,MAAM,CAAC;EAC/F,MAAMQ,WAAW,GAAGhB,SAAS,CAACC,KAAK,CAACc,aAAa,EAAE,sCAAsC,CAAC;;EAE1F;EACAhB,SAAS,CAAC,MAAM;IACZ,CAACe,YAAY,EAAEE,WAAW,CAAC,CAACC,OAAO,CAACC,OAAO,IAAI;MAC3CA,OAAO,CAACC,SAAS,GAAGlB,KAAK,CAACmB,YAAY;MACtCF,OAAO,CAACG,SAAS,GAAGpB,KAAK,CAACmB,YAAY;MACtCF,OAAO,CAACI,WAAW,GAAG,IAAI;IAC9B,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,YAAY,EAAEE,WAAW,CAAC,CAAC;EAE/B,oBACIb,OAAA;IAAMO,QAAQ,EAAEA,QAAS;IAACC,QAAQ,EAAEA,QAAS;IAACC,KAAK,EAAEA,KAAM;IAAAW,QAAA,gBACvDpB,OAAA;MAAeqB,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCzB,OAAA;MACI0B,GAAG,EAAEpB,OAAO,GAAGO,WAAW,GAAGF,YAAa;MAC1CgB,IAAI,EAAE7B,KAAK,CAAC8B,UAAW;MACvBC,WAAW,EAAE;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf;AAACf,EAAA,CAxBQP,QAAQ;EAAA,QAEQN,SAAS,EACVA,SAAS;AAAA;AAAAiC,EAAA,GAHxB3B,QAAQ;AA0BjB,eAAe,SAAS4B,SAASA,CAAC;EAAEC;AAAM,CAAC,EAAE;EACzC,oBACIhC,OAAA,CAAAE,SAAA;IAAAkB,QAAA,EACKY,KAAK,CAACN,GAAG,CAAEO,IAAI,iBACZjC,OAAA,CAACG,QAAQ;MAELC,IAAI,EAAE6B,IAAI,CAAC7B,IAAK;MAChBC,KAAK,EAAE4B,IAAI,CAAC5B,KAAM;MAClBC,OAAO,EAAE2B,IAAI,CAAC3B,OAAQ;MACtBC,QAAQ,EAAE0B,IAAI,CAAC1B,QAAS;MACxBC,QAAQ,EAAEyB,IAAI,CAACzB,QAAS;MACxBC,KAAK,EAAEwB,IAAI,CAACxB;IAAM,GANbwB,IAAI,CAACC,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOf,CACJ;EAAC,gBACJ,CAAC;AAEX;AAACU,GAAA,GAhBuBJ,SAAS;AAAA,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}