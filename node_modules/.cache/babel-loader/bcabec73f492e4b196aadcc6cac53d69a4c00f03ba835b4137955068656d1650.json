{"ast":null,"code":"var _jsxFileName = \"/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card({\n  suit,\n  value,\n  position = [0, 0, 0],\n  onClick,\n  flipped = false\n}) {\n  _s();\n  const meshRef = useRef();\n  const [hovered, setHovered] = useState(false);\n\n  // Load textures unconditionally to follow React Hook rules\n  const frontTexturePath = `/assets/cards/faces/${suit}/${value}.png`;\n  const backTexturePath = '/assets/cards/backs/cardback.png';\n\n  // Load textures\n  const frontTexture = useLoader(THREE.TextureLoader, frontTexturePath);\n  const backTexture = useLoader(THREE.TextureLoader, backTexturePath);\n\n  // Set texture filtering for better quality\n  frontTexture.minFilter = THREE.LinearFilter;\n  frontTexture.magFilter = THREE.LinearFilter;\n  frontTexture.anisotropy = 10;\n  backTexture.minFilter = THREE.LinearFilter;\n  backTexture.magFilter = THREE.LinearFilter;\n  backTexture.anisotropy = 16;\n\n  // Card dimensions (standard playing card ratio)\n  const width = 1;\n  const height = 1.4;\n\n  // Handle hover state\n  const onPointerOver = () => setHovered(true);\n  const onPointerOut = () => setHovered(false);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    position: position,\n    onClick: onClick,\n    onPointerOver: onPointerOver,\n    onPointerOut: onPointerOut,\n    scale: hovered ? [1.1, 1.1, 1.1] : [1, 1, 1],\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [width, height]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      map: flipped ? backTexture : frontTexture,\n      side: THREE.DoubleSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"duvcsPSlI1jpkA4EPIvUbHNsN1I=\", false, function () {\n  return [useLoader, useLoader];\n});\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useRef","useState","useLoader","THREE","jsxDEV","_jsxDEV","Card","suit","value","position","onClick","flipped","_s","meshRef","hovered","setHovered","frontTexturePath","backTexturePath","frontTexture","TextureLoader","backTexture","minFilter","LinearFilter","magFilter","anisotropy","width","height","onPointerOver","onPointerOut","ref","scale","children","args","fileName","_jsxFileName","lineNumber","columnNumber","map","side","DoubleSide","_c","$RefreshReg$"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/Card.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nexport default function Card({ \n  suit, \n  value, \n  position = [0, 0, 0], \n  onClick, \n  flipped = false \n}) {\n  const meshRef = useRef();\n  const [hovered, setHovered] = useState(false);\n  \n  // Load textures unconditionally to follow React Hook rules\n  const frontTexturePath = `/assets/cards/faces/${suit}/${value}.png`;\n  const backTexturePath = '/assets/cards/backs/cardback.png';\n  \n  // Load textures\n  const frontTexture = useLoader(THREE.TextureLoader, frontTexturePath);\n  const backTexture = useLoader(THREE.TextureLoader, backTexturePath);\n  \n  // Set texture filtering for better quality\n  frontTexture.minFilter = THREE.LinearFilter;\n  frontTexture.magFilter = THREE.LinearFilter;\n  frontTexture.anisotropy = 10;\n  \n  backTexture.minFilter = THREE.LinearFilter;\n  backTexture.magFilter = THREE.LinearFilter;\n  backTexture.anisotropy = 16;\n  \n  // Card dimensions (standard playing card ratio)\n  const width = 1;\n  const height = 1.4;\n  \n  // Handle hover state\n  const onPointerOver = () => setHovered(true);\n  const onPointerOut = () => setHovered(false);\n  \n  return (\n    <mesh\n      ref={meshRef}\n      position={position}\n      onClick={onClick}\n      onPointerOver={onPointerOver}\n      onPointerOut={onPointerOut}\n      scale={hovered ? [1.1, 1.1, 1.1] : [1, 1, 1]}\n    >\n      <planeGeometry args={[width, height]} />\n      <meshStandardMaterial \n        map={flipped ? backTexture : frontTexture}\n        side={THREE.DoubleSide}\n      />\n    </mesh>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,IAAIA,CAAC;EAC3BC,IAAI;EACJC,KAAK;EACLC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpBC,OAAO;EACPC,OAAO,GAAG;AACZ,CAAC,EAAE;EAAAC,EAAA;EACD,MAAMC,OAAO,GAAGb,MAAM,CAAC,CAAC;EACxB,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMe,gBAAgB,GAAG,uBAAuBT,IAAI,IAAIC,KAAK,MAAM;EACnE,MAAMS,eAAe,GAAG,kCAAkC;;EAE1D;EACA,MAAMC,YAAY,GAAGhB,SAAS,CAACC,KAAK,CAACgB,aAAa,EAAEH,gBAAgB,CAAC;EACrE,MAAMI,WAAW,GAAGlB,SAAS,CAACC,KAAK,CAACgB,aAAa,EAAEF,eAAe,CAAC;;EAEnE;EACAC,YAAY,CAACG,SAAS,GAAGlB,KAAK,CAACmB,YAAY;EAC3CJ,YAAY,CAACK,SAAS,GAAGpB,KAAK,CAACmB,YAAY;EAC3CJ,YAAY,CAACM,UAAU,GAAG,EAAE;EAE5BJ,WAAW,CAACC,SAAS,GAAGlB,KAAK,CAACmB,YAAY;EAC1CF,WAAW,CAACG,SAAS,GAAGpB,KAAK,CAACmB,YAAY;EAC1CF,WAAW,CAACI,UAAU,GAAG,EAAE;;EAE3B;EACA,MAAMC,KAAK,GAAG,CAAC;EACf,MAAMC,MAAM,GAAG,GAAG;;EAElB;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAMZ,UAAU,CAAC,IAAI,CAAC;EAC5C,MAAMa,YAAY,GAAGA,CAAA,KAAMb,UAAU,CAAC,KAAK,CAAC;EAE5C,oBACEV,OAAA;IACEwB,GAAG,EAAEhB,OAAQ;IACbJ,QAAQ,EAAEA,QAAS;IACnBC,OAAO,EAAEA,OAAQ;IACjBiB,aAAa,EAAEA,aAAc;IAC7BC,YAAY,EAAEA,YAAa;IAC3BE,KAAK,EAAEhB,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAAAiB,QAAA,gBAE7C1B,OAAA;MAAe2B,IAAI,EAAE,CAACP,KAAK,EAAEC,MAAM;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxC/B,OAAA;MACEgC,GAAG,EAAE1B,OAAO,GAAGS,WAAW,GAAGF,YAAa;MAC1CoB,IAAI,EAAEnC,KAAK,CAACoC;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;AAACxB,EAAA,CAnDuBN,IAAI;EAAA,QAeLJ,SAAS,EACVA,SAAS;AAAA;AAAAsC,EAAA,GAhBPlC,IAAI;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}