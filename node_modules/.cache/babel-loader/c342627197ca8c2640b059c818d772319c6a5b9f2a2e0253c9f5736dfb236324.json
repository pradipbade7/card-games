{"ast":null,"code":"var _jsxFileName = \"/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/PlayerHand.js\";\nimport React, { Suspense } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport CardMesh from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlayerHand({\n  player,\n  isCurrentTurn,\n  isHumanPlayer,\n  gamePhase,\n  showTotal,\n  isWinner\n}) {\n  const {\n    name,\n    cards,\n    visibleCards,\n    hiddenCards,\n    total,\n    status\n  } = player;\n  const getStatusText = () => {\n    switch (status) {\n      case 'active':\n        return isCurrentTurn ? 'Playing...' : 'Waiting';\n      case 'holding':\n        return `Holding${showTotal ? ` at ${total}` : ''}`;\n      case 'eliminated':\n        return 'Busted!';\n      case 'winner':\n        return 'Winner!';\n      default:\n        return '';\n    }\n  };\n  const CardPlaceholder = ({\n    suit,\n    value,\n    flipped\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card-placeholder ${flipped ? 'card-back' : 'card-front'}`,\n    children: !flipped && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-value\",\n      children: [value.charAt(0).toUpperCase(), value.length > 1 ? value.charAt(1) : '', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `suit ${suit}`,\n        children: \"\\u2665\\u2666\\u2660\\u2663\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n  const showAllCards = gamePhase === 'gameOver' || gamePhase === 'revealing' || status === 'eliminated' || status === 'winner';\n  const cardsToRender = [...hiddenCards.map((card, index) => ({\n    ...card,\n    flipped: !showAllCards,\n    position: [-2 + index * 1.2, 0, 0]\n  })), ...visibleCards.map((card, index) => ({\n    ...card,\n    flipped: false,\n    position: [-2 + (hiddenCards.length + index) * 1.2, 0, 0]\n  }))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `player-hand ${isCurrentTurn ? 'active-turn' : ''} ${status} ${isWinner ? 'winning-player' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [name, \" \", isWinner && gamePhase === 'gameOver' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"winner-badge\",\n          children: \"\\uD83D\\uDC51\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Total: \", showTotal ? total : '?']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getStatusText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-placeholder-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Canvas, {\n          shadows: true,\n          camera: {\n            position: [0, 0, 5]\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n            intensity: 0.8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n            position: [10, 10, 10]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), cardsToRender.map((card, index) => /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(CardPlaceholder, {\n              ...card\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 35\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(CardMesh, {\n              ...card\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_c = PlayerHand;\nvar _c;\n$RefreshReg$(_c, \"PlayerHand\");","map":{"version":3,"names":["React","Suspense","Canvas","CardMesh","jsxDEV","_jsxDEV","PlayerHand","player","isCurrentTurn","isHumanPlayer","gamePhase","showTotal","isWinner","name","cards","visibleCards","hiddenCards","total","status","getStatusText","CardPlaceholder","suit","value","flipped","className","children","charAt","toUpperCase","length","fileName","_jsxFileName","lineNumber","columnNumber","showAllCards","cardsToRender","map","card","index","position","style","width","height","shadows","camera","intensity","fallback","_c","$RefreshReg$"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/PlayerHand.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport CardMesh from './Card';\n\nexport default function PlayerHand({\n  player,\n  isCurrentTurn,\n  isHumanPlayer,\n  gamePhase,\n  showTotal,\n  isWinner,\n}) {\n  const { name, cards, visibleCards, hiddenCards, total, status } = player;\n\n  const getStatusText = () => {\n    switch (status) {\n      case 'active':\n        return isCurrentTurn ? 'Playing...' : 'Waiting';\n      case 'holding':\n        return `Holding${showTotal ? ` at ${total}` : ''}`;\n      case 'eliminated':\n        return 'Busted!';\n      case 'winner':\n        return 'Winner!';\n      default:\n        return '';\n    }\n  };\n\n  const CardPlaceholder = ({ suit, value, flipped }) => (\n    <div className={`card-placeholder ${flipped ? 'card-back' : 'card-front'}`}>\n      {!flipped && (\n        <div className=\"card-value\">\n          {value.charAt(0).toUpperCase()}\n          {value.length > 1 ? value.charAt(1) : ''}\n          <span className={`suit ${suit}`}>â™¥â™¦â™ â™£</span>\n        </div>\n      )}\n    </div>\n  );\n\n  const showAllCards = gamePhase === 'gameOver' || gamePhase === 'revealing' || status === 'eliminated' || status === 'winner';\n\n  const cardsToRender = [\n    ...hiddenCards.map((card, index) => ({\n      ...card,\n      flipped: !showAllCards,\n      position: [-2 + index * 1.2, 0, 0],\n    })),\n    ...visibleCards.map((card, index) => ({\n      ...card,\n      flipped: false,\n      position: [-2 + (hiddenCards.length + index) * 1.2, 0, 0],\n    })),\n  ];\n\n  return (\n    <div className={`player-hand ${isCurrentTurn ? 'active-turn' : ''} ${status} ${isWinner ? 'winning-player' : ''}`}>\n      <div className=\"player-info\">\n        <h3>\n          {name} {isWinner && gamePhase === 'gameOver' && <span className=\"winner-badge\">ðŸ‘‘</span>}\n        </h3>\n        <div className=\"player-status\">\n          <span>Total: {showTotal ? total : '?'}</span>\n          <span>{getStatusText()}</span>\n        </div>\n      </div>\n\n      <div className=\"cards-placeholder-container\">\n        <div style={{ width: '100%', height: '100%' }}>\n          <Canvas shadows camera={{ position: [0, 0, 5] }}>\n            <ambientLight intensity={0.8} />\n            <pointLight position={[10, 10, 10]} />\n            {cardsToRender.map((card, index) => (\n              <Suspense fallback={<CardPlaceholder key={index} {...card} />}>\n                <CardMesh key={index} {...card} />\n              </Suspense>\n            ))}\n          </Canvas>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}