{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useCards = () => {\n  _s();\n  const [deck, setDeck] = useState([]);\n  const [selectedCards, setSelectedCards] = useState([]);\n  useEffect(() => {\n    const createDeck = () => {\n      const suits = ['clubs', 'diamonds', 'hearts', 'spades'];\n      const values = Array.from({\n        length: 13\n      }, (_, i) => i + 1);\n      const newDeck = [];\n      suits.forEach(suit => {\n        values.forEach(value => {\n          newDeck.push({\n            suit,\n            value\n          });\n        });\n      });\n      setDeck(newDeck);\n    };\n    createDeck();\n  }, []);\n  const randomizeCards = () => {\n    const shuffledDeck = [...deck].sort(() => Math.random() - 0.5);\n    const threeRandomCards = shuffledDeck.slice(0, 3);\n    setSelectedCards(threeRandomCards);\n  };\n  return {\n    deck,\n    selectedCards,\n    randomizeCards\n  };\n};\n_s(useCards, \"FTcx09Ij7nkTl+7j70wmwGjyHPA=\");\nexport default useCards;","map":{"version":3,"names":["useState","useEffect","useCards","_s","deck","setDeck","selectedCards","setSelectedCards","createDeck","suits","values","Array","from","length","_","i","newDeck","forEach","suit","value","push","randomizeCards","shuffledDeck","sort","Math","random","threeRandomCards","slice"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/hooks/useCards.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useCards = () => {\n    const [deck, setDeck] = useState([]);\n    const [selectedCards, setSelectedCards] = useState([]);\n\n    useEffect(() => {\n        const createDeck = () => {\n            const suits = ['clubs', 'diamonds', 'hearts', 'spades'];\n            const values = Array.from({ length: 13 }, (_, i) => i + 1);\n            const newDeck = [];\n\n            suits.forEach(suit => {\n                values.forEach(value => {\n                    newDeck.push({ suit, value });\n                });\n            });\n\n            setDeck(newDeck);\n        };\n\n        createDeck();\n    }, []);\n\n    const randomizeCards = () => {\n        const shuffledDeck = [...deck].sort(() => Math.random() - 0.5);\n        const threeRandomCards = shuffledDeck.slice(0, 3);\n        setSelectedCards(threeRandomCards);\n    };\n\n    return { deck, selectedCards, randomizeCards };\n};\n\nexport default useCards;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,MAAMO,UAAU,GAAGA,CAAA,KAAM;MACrB,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC;MACvD,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;MAC1D,MAAMC,OAAO,GAAG,EAAE;MAElBP,KAAK,CAACQ,OAAO,CAACC,IAAI,IAAI;QAClBR,MAAM,CAACO,OAAO,CAACE,KAAK,IAAI;UACpBH,OAAO,CAACI,IAAI,CAAC;YAAEF,IAAI;YAAEC;UAAM,CAAC,CAAC;QACjC,CAAC,CAAC;MACN,CAAC,CAAC;MAEFd,OAAO,CAACW,OAAO,CAAC;IACpB,CAAC;IAEDR,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,YAAY,GAAG,CAAC,GAAGlB,IAAI,CAAC,CAACmB,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAC9D,MAAMC,gBAAgB,GAAGJ,YAAY,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACjDpB,gBAAgB,CAACmB,gBAAgB,CAAC;EACtC,CAAC;EAED,OAAO;IAAEtB,IAAI;IAAEE,aAAa;IAAEe;EAAe,CAAC;AAClD,CAAC;AAAClB,EAAA,CA7BID,QAAQ;AA+Bd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}