{"ast":null,"code":"var _jsxFileName = \"/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/PlayerHand.js\";\nimport React from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlayerHand({\n  player,\n  isCurrentTurn,\n  isHumanPlayer\n}) {\n  const {\n    name,\n    cards,\n    visibleCards,\n    hiddenCards,\n    total,\n    status\n  } = player;\n\n  // Helper function to get status text\n  const getStatusText = () => {\n    switch (status) {\n      case 'active':\n        return isCurrentTurn ? 'Playing...' : 'Waiting';\n      case 'holding':\n        return `Holding at ${total}`;\n      case 'eliminated':\n        return 'Busted!';\n      case 'winner':\n        return 'Winner!';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `player-hand ${isCurrentTurn ? 'active-turn' : ''} ${status}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Total: \", isHumanPlayer || status !== 'active' ? total : '?']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getStatusText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: [hiddenCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          suit: card.suit,\n          value: card.value,\n          flipped: true // Always show back\n          ,\n          position: [0, 0, 0],\n          scale: [1.2, 1.2, 1.2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, `hidden-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)), visibleCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          suit: card.suit,\n          value: card.value,\n          flipped: false // Show face\n          ,\n          position: [0, 0, 0],\n          scale: [1.2, 1.2, 1.2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, `visible-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = PlayerHand;\nvar _c;\n$RefreshReg$(_c, \"PlayerHand\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","PlayerHand","player","isCurrentTurn","isHumanPlayer","name","cards","visibleCards","hiddenCards","total","status","getStatusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","suit","value","flipped","position","scale","_c","$RefreshReg$"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/PlayerHand.js"],"sourcesContent":["import React from 'react';\nimport Card from './Card';\n\nexport default function PlayerHand({ player, isCurrentTurn, isHumanPlayer }) {\n  const { name, cards, visibleCards, hiddenCards, total, status } = player;\n  \n  // Helper function to get status text\n  const getStatusText = () => {\n    switch(status) {\n      case 'active': return isCurrentTurn ? 'Playing...' : 'Waiting';\n      case 'holding': return `Holding at ${total}`;\n      case 'eliminated': return 'Busted!';\n      case 'winner': return 'Winner!';\n      default: return '';\n    }\n  };\n  \n  return (\n    <div className={`player-hand ${isCurrentTurn ? 'active-turn' : ''} ${status}`}>\n      <div className=\"player-info\">\n        <h3>{name}</h3>\n        <div className=\"player-status\">\n          <span>Total: {isHumanPlayer || status !== 'active' ? total : '?'}</span>\n          <span>{getStatusText()}</span>\n        </div>\n      </div>\n      \n      <div className=\"cards-container\">\n        {/* Hidden cards (only for bots) */}\n        {hiddenCards.map((card, index) => (\n          <div key={`hidden-${index}`} className=\"card-wrapper\">\n            <Card\n              suit={card.suit}\n              value={card.value}\n              flipped={true} // Always show back\n              position={[0, 0, 0]}\n              scale={[1.2, 1.2, 1.2]}\n            />\n          </div>\n        ))}\n        \n        {/* Visible cards */}\n        {visibleCards.map((card, index) => (\n          <div key={`visible-${index}`} className=\"card-wrapper\">\n            <Card\n              suit={card.suit}\n              value={card.value}\n              flipped={false} // Show face\n              position={[0, 0, 0]}\n              scale={[1.2, 1.2, 1.2]}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}