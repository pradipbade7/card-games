{"ast":null,"code":"var _jsxFileName = \"/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/GameBoard.js\";\nimport React from 'react';\nimport PlayerHand from './PlayerHand';\nimport GameLog from './GameLog';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameBoard({\n  gameState,\n  onDrawCard,\n  onHold,\n  onReset\n}) {\n  const {\n    players,\n    currentPlayerIndex,\n    phase,\n    gameLog\n  } = gameState;\n  const currentPlayer = players[currentPlayerIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game of 17\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-status\",\n        children: phase === 'playing' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Current Turn: \", currentPlayer.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-container\",\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(PlayerHand, {\n        player: player,\n        isCurrentTurn: index === currentPlayerIndex && phase === 'playing',\n        isHumanPlayer: player.isHuman,\n        gamePhase: phase\n      }, player.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: [phase === 'playing' && players[currentPlayerIndex].isHuman && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onDrawCard,\n          disabled: players[currentPlayerIndex].status !== 'active',\n          children: \"Draw Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onHold,\n          disabled: players[currentPlayerIndex].status !== 'active' || players[currentPlayerIndex].total < 11,\n          children: \"Hold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), phase === 'gameOver' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReset,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameLog, {\n      logs: gameLog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","PlayerHand","GameLog","jsxDEV","_jsxDEV","Fragment","_Fragment","GameBoard","gameState","onDrawCard","onHold","onReset","players","currentPlayerIndex","phase","gameLog","currentPlayer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","map","player","index","isCurrentTurn","isHumanPlayer","isHuman","gamePhase","id","onClick","disabled","status","total","logs","_c","$RefreshReg$"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/GameBoard.js"],"sourcesContent":["import React from 'react';\nimport PlayerHand from './PlayerHand';\nimport GameLog from './GameLog';\n\nexport default function GameBoard({ gameState, onDrawCard, onHold, onReset }) {\n    const { players, currentPlayerIndex, phase, gameLog } = gameState;\n    const currentPlayer = players[currentPlayerIndex];\n\n    return (\n        <div className=\"game-board\">\n            <div className=\"game-header\">\n                <h2>Game of 17</h2>\n                <div className=\"game-status\">\n                    {phase === 'playing' ? (\n                        <span>Current Turn: {currentPlayer.name}</span>\n                    ) : (\n                        <span>Game Over</span>\n                    )}\n                </div>\n            </div>\n\n            <div className=\"players-container\">\n                {players.map((player, index) => (\n                    <PlayerHand\n                        key={player.id}\n                        player={player}\n                        isCurrentTurn={index === currentPlayerIndex && phase === 'playing'}\n                        isHumanPlayer={player.isHuman}\n                        gamePhase={phase}\n                    />\n                ))}\n            </div>\n\n            <div className=\"game-controls\">\n                {phase === 'playing' && players[currentPlayerIndex].isHuman && (\n                    <>\n                        <button\n                            onClick={onDrawCard}\n                            disabled={players[currentPlayerIndex].status !== 'active'}\n                        >\n                            Draw Card\n                        </button>\n                        <button\n                            onClick={onHold}\n                            disabled={\n                                players[currentPlayerIndex].status !== 'active' ||\n                                players[currentPlayerIndex].total < 11\n                            }\n                        >\n                            Hold\n                        </button>\n                    </>\n                )}\n\n                {phase === 'gameOver' && (\n                    <button onClick={onReset}>New Game</button>\n                )}\n            </div>\n\n            <GameLog logs={gameLog} />\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}