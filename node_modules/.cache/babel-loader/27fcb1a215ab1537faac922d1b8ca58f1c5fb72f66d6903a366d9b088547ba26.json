{"ast":null,"code":"var _jsxFileName = \"/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/cards/Card.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { Canvas } from '@react-three/fiber';\n\n// The 3D Card mesh component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CardMesh({\n  suit,\n  value,\n  flipped,\n  position,\n  scale\n}) {\n  _s();\n  // Load textures only once and cache them\n  const frontTexture = useLoader(THREE.TextureLoader, `/assets/cards/faces/${suit}/${value}.png`);\n  const backTexture = useLoader(THREE.TextureLoader, '/assets/cards/backs/cardback.png');\n\n  // Optimize texture rendering\n  useEffect(() => {\n    [frontTexture, backTexture].forEach(texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      texture.needsUpdate = true;\n    });\n  }, [frontTexture, backTexture]);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    scale: scale,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [1, 1.4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      map: flipped ? backTexture : frontTexture,\n      side: THREE.DoubleSide,\n      transparent: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n// The Card component that wraps the 3D mesh in a Canvas\n_s(CardMesh, \"mG+vouXsQN3+7Kwp1D2KP5eTdaI=\", false, function () {\n  return [useLoader, useLoader];\n});\n_c = CardMesh;\nexport default function Card({\n  suit,\n  value,\n  flipped,\n  position,\n  scale\n}) {\n  _s2();\n  const canvasRef = useRef();\n\n  // Clean up WebGL context when unmounting\n  useEffect(() => {\n    return () => {\n      if (canvasRef.current) {\n        var _canvasRef$current$__;\n        const gl = (_canvasRef$current$__ = canvasRef.current.__r3f) === null || _canvasRef$current$__ === void 0 ? void 0 : _canvasRef$current$__.gl;\n        if (gl) {\n          gl.dispose();\n        }\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      ref: canvasRef,\n      shadows: true,\n      camera: {\n        position: [0, 0, 2]\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardMesh, {\n        suit: suit,\n        value: value,\n        flipped: flipped,\n        position: position,\n        scale: scale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s2(Card, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c2 = Card;\nvar _c, _c2;\n$RefreshReg$(_c, \"CardMesh\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"names":["React","useEffect","useRef","useLoader","THREE","Canvas","jsxDEV","_jsxDEV","CardMesh","suit","value","flipped","position","scale","_s","frontTexture","TextureLoader","backTexture","forEach","texture","minFilter","LinearFilter","magFilter","needsUpdate","children","args","fileName","_jsxFileName","lineNumber","columnNumber","map","side","DoubleSide","transparent","_c","Card","_s2","canvasRef","current","_canvasRef$current$__","gl","__r3f","dispose","style","width","height","ref","shadows","camera","intensity","_c2","$RefreshReg$"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/cards/Card.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useLoader } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { Canvas } from '@react-three/fiber';\n\n// The 3D Card mesh component\nexport function CardMesh({ suit, value, flipped, position, scale }) {\n  // Load textures only once and cache them\n  const frontTexture = useLoader(THREE.TextureLoader, `/assets/cards/faces/${suit}/${value}.png`);\n  const backTexture = useLoader(THREE.TextureLoader, '/assets/cards/backs/cardback.png');\n  \n  // Optimize texture rendering\n  useEffect(() => {\n    [frontTexture, backTexture].forEach(texture => {\n      texture.minFilter = THREE.LinearFilter;\n      texture.magFilter = THREE.LinearFilter;\n      texture.needsUpdate = true;\n    });\n  }, [frontTexture, backTexture]);\n  \n  return (\n    <mesh position={position} scale={scale}>\n      <planeGeometry args={[1, 1.4]} />\n      <meshBasicMaterial \n        map={flipped ? backTexture : frontTexture}\n        side={THREE.DoubleSide}\n        transparent={true}\n      />\n    </mesh>\n  );\n}\n\n// The Card component that wraps the 3D mesh in a Canvas\nexport default function Card({ suit, value, flipped, position, scale }) {\n  const canvasRef = useRef();\n\n  // Clean up WebGL context when unmounting\n  useEffect(() => {\n    return () => {\n      if (canvasRef.current) {\n        const gl = canvasRef.current.__r3f?.gl;\n        if (gl) {\n          gl.dispose();\n        }\n      }\n    };\n  }, []);\n\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <Canvas ref={canvasRef} shadows camera={{ position: [0, 0, 2] }}>\n        <ambientLight intensity={0.8} />\n        <pointLight position={[10, 10, 10]} />\n        <CardMesh \n          suit={suit}\n          value={value}\n          flipped={flipped}\n          position={position}\n          scale={scale}\n        />\n      </Canvas>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}