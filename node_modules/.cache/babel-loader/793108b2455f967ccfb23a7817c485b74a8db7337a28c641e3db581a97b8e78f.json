{"ast":null,"code":"const audioFiles = {\n  cardDraw: \"../../assets/sounds/card_deal.ogg\",\n  cardDeal: \"../../assets/sounds/card_deal.ogg\",\n  turnChange: \"../../assets/sounds/turn-change.mp3\",\n  hold: \"../../assets/sounds/game_hold.mp3\",\n  bust: \"../../assets/sounds/bust.mp3\",\n  win: \"../../assets/sounds/game_win.mp3\",\n  gameOver: \"../../assets/sounds/game_lose.wav\",\n  gameStart: \"../../assets/sounds/game_start.mp3\"\n};\n\n// Cache audio objects for better performance\nconst audioCache = {};\n\n// Sound enabled state - stored in localStorage for persistence\nlet soundEnabled = localStorage.getItem('soundEnabled') !== 'false'; // Default to true\n\n// Check if sound is enabled\nexport function isSoundEnabled() {\n  return soundEnabled;\n}\n\n// Toggle sound on/off\nexport function toggleSound() {\n  soundEnabled = !soundEnabled;\n  localStorage.setItem('soundEnabled', soundEnabled);\n  return soundEnabled;\n}\n\n// Set sound state explicitly\nexport function setSoundEnabled(enabled) {\n  soundEnabled = enabled;\n  localStorage.setItem('soundEnabled', enabled);\n  return soundEnabled;\n}\nexport function playSoundEffect(soundName) {\n  // Don't play if sound is disabled\n  if (!soundEnabled) {\n    return;\n  }\n  if (!audioFiles[soundName]) {\n    console.warn(`Sound effect \"${soundName}\" not found.`);\n    return;\n  }\n  try {\n    // Create or use cached audio object\n    if (!audioCache[soundName]) {\n      audioCache[soundName] = new Audio(audioFiles[soundName]);\n    }\n    const audio = audioCache[soundName];\n\n    // Reset audio to beginning if it's already playing\n    audio.currentTime = 0;\n    audio.play().catch(error => {\n      console.warn(`Failed to play sound \"${soundName}\": ${error.message}`);\n    });\n  } catch (error) {\n    console.error(`Error playing sound \"${soundName}\":`, error);\n  }\n}\n\n// Optional: Preload all audio files for instant playback\nexport function preloadAudioFiles() {\n  Object.keys(audioFiles).forEach(key => {\n    try {\n      audioCache[key] = new Audio(audioFiles[key]);\n      // Load file without playing\n      audioCache[key].load();\n    } catch (error) {\n      console.warn(`Failed to preload audio \"${key}\":`, error);\n    }\n  });\n  console.log(\"Audio files preloaded\");\n}","map":{"version":3,"names":["audioFiles","cardDraw","cardDeal","turnChange","hold","bust","win","gameOver","gameStart","audioCache","soundEnabled","localStorage","getItem","isSoundEnabled","toggleSound","setItem","setSoundEnabled","enabled","playSoundEffect","soundName","console","warn","Audio","audio","currentTime","play","catch","error","message","preloadAudioFiles","Object","keys","forEach","key","load","log"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/services/audioService.js"],"sourcesContent":["const audioFiles = {\n    cardDraw: \"../../assets/sounds/card_deal.ogg\",\n    cardDeal: \"../../assets/sounds/card_deal.ogg\",\n    turnChange: \"../../assets/sounds/turn-change.mp3\",\n    hold: \"../../assets/sounds/game_hold.mp3\",\n    bust: \"../../assets/sounds/bust.mp3\",\n    win: \"../../assets/sounds/game_win.mp3\",\n    gameOver: \"../../assets/sounds/game_lose.wav\",\n    gameStart: \"../../assets/sounds/game_start.mp3\"\n};\n\n// Cache audio objects for better performance\nconst audioCache = {};\n\n// Sound enabled state - stored in localStorage for persistence\nlet soundEnabled = localStorage.getItem('soundEnabled') !== 'false'; // Default to true\n\n// Check if sound is enabled\nexport function isSoundEnabled() {\n    return soundEnabled;\n}\n\n// Toggle sound on/off\nexport function toggleSound() {\n    soundEnabled = !soundEnabled;\n    localStorage.setItem('soundEnabled', soundEnabled);\n    return soundEnabled;\n}\n\n// Set sound state explicitly\nexport function setSoundEnabled(enabled) {\n    soundEnabled = enabled;\n    localStorage.setItem('soundEnabled', enabled);\n    return soundEnabled;\n}\n\nexport function playSoundEffect(soundName) {\n    // Don't play if sound is disabled\n    if (!soundEnabled) {\n        return;\n    }\n\n    if (!audioFiles[soundName]) {\n        console.warn(`Sound effect \"${soundName}\" not found.`);\n        return;\n    }\n    \n    try {\n        // Create or use cached audio object\n        if (!audioCache[soundName]) {\n            audioCache[soundName] = new Audio(audioFiles[soundName]);\n        }\n        \n        const audio = audioCache[soundName];\n        \n        // Reset audio to beginning if it's already playing\n        audio.currentTime = 0;\n        audio.play().catch(error => {\n            console.warn(`Failed to play sound \"${soundName}\": ${error.message}`);\n        });\n    } catch (error) {\n        console.error(`Error playing sound \"${soundName}\":`, error);\n    }\n}\n\n// Optional: Preload all audio files for instant playback\nexport function preloadAudioFiles() {\n    Object.keys(audioFiles).forEach(key => {\n        try {\n            audioCache[key] = new Audio(audioFiles[key]);\n            // Load file without playing\n            audioCache[key].load();\n        } catch (error) {\n            console.warn(`Failed to preload audio \"${key}\":`, error);\n        }\n    });\n    console.log(\"Audio files preloaded\");\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAG;EACfC,QAAQ,EAAE,mCAAmC;EAC7CC,QAAQ,EAAE,mCAAmC;EAC7CC,UAAU,EAAE,qCAAqC;EACjDC,IAAI,EAAE,mCAAmC;EACzCC,IAAI,EAAE,8BAA8B;EACpCC,GAAG,EAAE,kCAAkC;EACvCC,QAAQ,EAAE,mCAAmC;EAC7CC,SAAS,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,UAAU,GAAG,CAAC,CAAC;;AAErB;AACA,IAAIC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,KAAK,OAAO,CAAC,CAAC;;AAErE;AACA,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC7B,OAAOH,YAAY;AACvB;;AAEA;AACA,OAAO,SAASI,WAAWA,CAAA,EAAG;EAC1BJ,YAAY,GAAG,CAACA,YAAY;EAC5BC,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEL,YAAY,CAAC;EAClD,OAAOA,YAAY;AACvB;;AAEA;AACA,OAAO,SAASM,eAAeA,CAACC,OAAO,EAAE;EACrCP,YAAY,GAAGO,OAAO;EACtBN,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEE,OAAO,CAAC;EAC7C,OAAOP,YAAY;AACvB;AAEA,OAAO,SAASQ,eAAeA,CAACC,SAAS,EAAE;EACvC;EACA,IAAI,CAACT,YAAY,EAAE;IACf;EACJ;EAEA,IAAI,CAACV,UAAU,CAACmB,SAAS,CAAC,EAAE;IACxBC,OAAO,CAACC,IAAI,CAAC,iBAAiBF,SAAS,cAAc,CAAC;IACtD;EACJ;EAEA,IAAI;IACA;IACA,IAAI,CAACV,UAAU,CAACU,SAAS,CAAC,EAAE;MACxBV,UAAU,CAACU,SAAS,CAAC,GAAG,IAAIG,KAAK,CAACtB,UAAU,CAACmB,SAAS,CAAC,CAAC;IAC5D;IAEA,MAAMI,KAAK,GAAGd,UAAU,CAACU,SAAS,CAAC;;IAEnC;IACAI,KAAK,CAACC,WAAW,GAAG,CAAC;IACrBD,KAAK,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MACxBP,OAAO,CAACC,IAAI,CAAC,yBAAyBF,SAAS,MAAMQ,KAAK,CAACC,OAAO,EAAE,CAAC;IACzE,CAAC,CAAC;EACN,CAAC,CAAC,OAAOD,KAAK,EAAE;IACZP,OAAO,CAACO,KAAK,CAAC,wBAAwBR,SAAS,IAAI,EAAEQ,KAAK,CAAC;EAC/D;AACJ;;AAEA;AACA,OAAO,SAASE,iBAAiBA,CAAA,EAAG;EAChCC,MAAM,CAACC,IAAI,CAAC/B,UAAU,CAAC,CAACgC,OAAO,CAACC,GAAG,IAAI;IACnC,IAAI;MACAxB,UAAU,CAACwB,GAAG,CAAC,GAAG,IAAIX,KAAK,CAACtB,UAAU,CAACiC,GAAG,CAAC,CAAC;MAC5C;MACAxB,UAAU,CAACwB,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZP,OAAO,CAACC,IAAI,CAAC,4BAA4BY,GAAG,IAAI,EAAEN,KAAK,CAAC;IAC5D;EACJ,CAAC,CAAC;EACFP,OAAO,CAACe,GAAG,CAAC,uBAAuB,CAAC;AACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}