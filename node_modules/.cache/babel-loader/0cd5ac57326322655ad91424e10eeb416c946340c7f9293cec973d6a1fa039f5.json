{"ast":null,"code":"var _jsxFileName = \"/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/CardSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useCards } from '../hooks/useCards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardSelection = () => {\n  _s();\n  const {\n    cards\n  } = useCards();\n  const [selectedCards, setSelectedCards] = useState([]);\n  const selectRandomCards = () => {\n    const shuffled = [...cards].sort(() => 0.5 - Math.random());\n    const threeCards = shuffled.slice(0, 3);\n    setSelectedCards(threeCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: selectRandomCards,\n      children: \"Select Random Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-cards\",\n      children: selectedCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: card.texture,\n        alt: `Card ${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(CardSelection, \"V1yW5Lr58pXLHHYj0lNWspwfXe8=\", false, function () {\n  return [useCards];\n});\n_c = CardSelection;\nexport default CardSelection;\nvar _c;\n$RefreshReg$(_c, \"CardSelection\");","map":{"version":3,"names":["React","useState","useCards","jsxDEV","_jsxDEV","CardSelection","_s","cards","selectedCards","setSelectedCards","selectRandomCards","shuffled","sort","Math","random","threeCards","slice","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","map","card","index","src","texture","alt","_c","$RefreshReg$"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/components/CardSelection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useCards } from '../hooks/useCards';\n\nconst CardSelection = () => {\n    const { cards } = useCards();\n    const [selectedCards, setSelectedCards] = useState([]);\n\n    const selectRandomCards = () => {\n        const shuffled = [...cards].sort(() => 0.5 - Math.random());\n        const threeCards = shuffled.slice(0, 3);\n        setSelectedCards(threeCards);\n    };\n\n    return (\n        <div>\n            <button onClick={selectRandomCards}>Select Random Cards</button>\n            <div className=\"selected-cards\">\n                {selectedCards.map((card, index) => (\n                    <img key={index} src={card.texture} alt={`Card ${index + 1}`} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default CardSelection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGL,QAAQ,CAAC,CAAC;EAC5B,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAAC,CAACK,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;IAC3D,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACvCP,gBAAgB,CAACM,UAAU,CAAC;EAChC,CAAC;EAED,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAQc,OAAO,EAAER,iBAAkB;MAAAO,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChElB,OAAA;MAAKmB,SAAS,EAAC,gBAAgB;MAAAN,QAAA,EAC1BT,aAAa,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3BtB,OAAA;QAAiBuB,GAAG,EAAEF,IAAI,CAACG,OAAQ;QAACC,GAAG,EAAE,QAAQH,KAAK,GAAG,CAAC;MAAG,GAAnDA,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgD,CAClE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChB,EAAA,CApBID,aAAa;EAAA,QACGH,QAAQ;AAAA;AAAA4B,EAAA,GADxBzB,aAAa;AAsBnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}