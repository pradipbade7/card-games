{"ast":null,"code":"export const cardUtils = {\n  suits: ['clubs', 'diamonds', 'hearts', 'spades'],\n  values: ['ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'jack', 'queen', 'king'],\n  generateDeck: () => {\n    const deck = [];\n    for (const suit of cardUtils.suits) {\n      for (const value of cardUtils.values) {\n        deck.push({\n          suit,\n          value\n        });\n      }\n    }\n    return deck;\n  },\n  shuffle: deck => {\n    const newDeck = [...deck];\n    for (let i = newDeck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [newDeck[i], newDeck[j]] = [newDeck[j], newDeck[i]];\n    }\n    return newDeck;\n  },\n  drawCards: (deck, count) => {\n    const shuffled = [...deck];\n    const drawn = shuffled.splice(0, count);\n    return {\n      drawn,\n      remaining: shuffled\n    };\n  },\n  getCardValue: card => {\n    switch (card.value) {\n      case 'ace':\n        return 1;\n      case 'jack':\n        return 11;\n      case 'queen':\n        return 12;\n      case 'king':\n        return 13;\n      default:\n        return parseInt(card.value);\n    }\n  },\n  calculateTotal: cards => {\n    return cards.reduce((total, card) => total + cardUtils.getCardValue(card), 0);\n  },\n  getCardName: card => {\n    return `${card.value} of ${card.suit}`;\n  }\n};","map":{"version":3,"names":["cardUtils","suits","values","generateDeck","deck","suit","value","push","shuffle","newDeck","i","length","j","Math","floor","random","drawCards","count","shuffled","drawn","splice","remaining","getCardValue","card","parseInt","calculateTotal","cards","reduce","total","getCardName"],"sources":["/Users/pradipbade/Documents/Projects/Small Projects/react-3d-card-game/src/services/cardUtils.js"],"sourcesContent":["export const cardUtils = {\n    suits: ['clubs', 'diamonds', 'hearts', 'spades'],\n    values: ['ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'jack', 'queen', 'king'],\n    \n    generateDeck: () => {\n      const deck = [];\n      for (const suit of cardUtils.suits) {\n        for (const value of cardUtils.values) {\n          deck.push({ suit, value });\n        }\n      }\n      return deck;\n    },\n    \n    shuffle: (deck) => {\n      const newDeck = [...deck];\n      for (let i = newDeck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [newDeck[i], newDeck[j]] = [newDeck[j], newDeck[i]];\n      }\n      return newDeck;\n    },\n    \n    drawCards: (deck, count) => {\n      const shuffled = [...deck];\n      const drawn = shuffled.splice(0, count);\n      return { drawn, remaining: shuffled };\n    },\n    \n    getCardValue: (card) => {\n      switch(card.value) {\n        case 'ace': return 1;\n        case 'jack': return 11;\n        case 'queen': return 12;\n        case 'king': return 13;\n        default: return parseInt(card.value);\n      }\n    },\n    \n    calculateTotal: (cards) => {\n      return cards.reduce((total, card) => total + cardUtils.getCardValue(card), 0);\n    },\n    \n    getCardName: (card) => {\n      return `${card.value} of ${card.suit}`;\n    },\n    \n  };"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG;EACrBC,KAAK,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC;EAChDC,MAAM,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;EAEtFC,YAAY,EAAEA,CAAA,KAAM;IAClB,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,MAAMC,IAAI,IAAIL,SAAS,CAACC,KAAK,EAAE;MAClC,KAAK,MAAMK,KAAK,IAAIN,SAAS,CAACE,MAAM,EAAE;QACpCE,IAAI,CAACG,IAAI,CAAC;UAAEF,IAAI;UAAEC;QAAM,CAAC,CAAC;MAC5B;IACF;IACA,OAAOF,IAAI;EACb,CAAC;EAEDI,OAAO,EAAGJ,IAAI,IAAK;IACjB,MAAMK,OAAO,GAAG,CAAC,GAAGL,IAAI,CAAC;IACzB,KAAK,IAAIM,CAAC,GAAGD,OAAO,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,OAAO,CAACC,CAAC,CAAC,EAAED,OAAO,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,OAAO,CAACG,CAAC,CAAC,EAAEH,OAAO,CAACC,CAAC,CAAC,CAAC;IACrD;IACA,OAAOD,OAAO;EAChB,CAAC;EAEDO,SAAS,EAAEA,CAACZ,IAAI,EAAEa,KAAK,KAAK;IAC1B,MAAMC,QAAQ,GAAG,CAAC,GAAGd,IAAI,CAAC;IAC1B,MAAMe,KAAK,GAAGD,QAAQ,CAACE,MAAM,CAAC,CAAC,EAAEH,KAAK,CAAC;IACvC,OAAO;MAAEE,KAAK;MAAEE,SAAS,EAAEH;IAAS,CAAC;EACvC,CAAC;EAEDI,YAAY,EAAGC,IAAI,IAAK;IACtB,QAAOA,IAAI,CAACjB,KAAK;MACf,KAAK,KAAK;QAAE,OAAO,CAAC;MACpB,KAAK,MAAM;QAAE,OAAO,EAAE;MACtB,KAAK,OAAO;QAAE,OAAO,EAAE;MACvB,KAAK,MAAM;QAAE,OAAO,EAAE;MACtB;QAAS,OAAOkB,QAAQ,CAACD,IAAI,CAACjB,KAAK,CAAC;IACtC;EACF,CAAC;EAEDmB,cAAc,EAAGC,KAAK,IAAK;IACzB,OAAOA,KAAK,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEL,IAAI,KAAKK,KAAK,GAAG5B,SAAS,CAACsB,YAAY,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAC/E,CAAC;EAEDM,WAAW,EAAGN,IAAI,IAAK;IACrB,OAAO,GAAGA,IAAI,CAACjB,KAAK,OAAOiB,IAAI,CAAClB,IAAI,EAAE;EACxC;AAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}